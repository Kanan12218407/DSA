TAYLOR SERIES USING RECURSION:
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
using namespace std;
double e(int x,int n){
    static double p=1,f=1;
    double r;
    if(n==0)
        return(1);
    else{
        r=e(x,n-1);
        p=p*x;
        f=f*n;
        return r+p/f;
    }
}
int main(){
    printf("%lf\n",e(3,10));
    return 0;
}
OUTPUT:
20.079665


TAYLOR SERIES USING HORNER'S RULE:
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
using namespace std;
double e(int x,int n){
    static double s;
    if(n==0)
        return s;
    s=1+x*s/n;
    return e(x,n-1);
    }

int main(){
    printf("%lf\n",e(1,10));
    return 0;
}
output:
2.718282
