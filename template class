#include<iostream>
#include<stdio.h>
#include<stdlib.h>
using namespace std;
class arithmetic
{
private:
    int a;
    int b;
public:
    arithmetic(int a,int b);
    int add();
    int sub();
};
    arithmetic::arithmetic(int a,int b)
    {
        this->a=a;
        this->b=b;
    }
    
    int arithmetic::add()
    {
        int c;
        c=a+b;
        return c;
    }
    int arithmetic::sub()
    {
        int c;
        c=a-b;
        return c;
    }
    

int main(){
    arithmetic ar(10,5);
    cout<<"add: "<<ar.add()<<endl<<"sub: "<<ar.sub()<<endl;
    return 0;
}
output:
add: 15
sub: 5



USING TEMPLATE:
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
using namespace std;
template<class T>
class arithmetic
{
private:
    T a;
    T b;
public:
    arithmetic(T a,T b);
    T add();
    T sub();
};
    template<class T>
    arithmetic<T>::arithmetic(T a,T b)
    {
        this->a=a;
        this->b=b;
    }
    template<class T>
    T arithmetic<T>::add()
    {
        T c;
        c=a+b;
        return c;
    }
    template<class T>
    T arithmetic<T>::sub()
    {
        T c;
        c=a-b;
        return c;
    }
    

int main(){
    arithmetic<float> ar(10.55,5.54);
    cout<<"add: "<<ar.add()<<endl<<"sub: "<<ar.sub()<<endl;
    return 0;
}
output:
add: 16.09
sub: 5.01
